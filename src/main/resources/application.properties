spring.application.name=Transacao

# Configuração do Servidor
server.port=8080

# === CONFIGURAÇÃO DO BANCO DE DADOS H2 (NOVO) ===
# URL de conexão para um banco em memória chamado 'bankdb'
spring.datasource.url=jdbc:h2:mem:bankdb;DB_CLOSE_DELAY=-1
# Driver do H2
spring.datasource.driverClassName=org.h2.Driver
# Usuário e senha do H2 (pode ser o que você quiser)
spring.datasource.username=sa
spring.datasource.password=password

# Habilitar o console do H2 para acessar o banco pelo navegador
spring.h2.console.enabled=true
# Opcional: Define o caminho para acessar o console (ex: http://localhost:8080/h2-console)
spring.h2.console.path=/h2-console


# === CONFIGURAÇÃO DO JPA (AJUSTADA PARA H2) ===
# Deixa o Hibernate criar/atualizar o schema. Para H2, 'update' ou 'create-drop' é comum.
# 'validate' ainda funciona se você ajustar os scripts do Flyway. Vamos manter 'validate'.
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Dialeto específico para H2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


# === CONFIGURAÇÃO DO FLYWAY ===
# Continua habilitado e vai usar a configuração do datasource do H2
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true

# Desabilita a inicialização do Docker Compose pelo Spring Boot
spring.docker.compose.enabled=false

# === CONFIGURAÇÕES DO MS SQL SERVER (COMENTADAS) ===
# spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=bank_db;encrypt=false;trustServerCertificate=true;
# spring.datasource.username=sa
# spring.datasource.password=YourStrong@Password123
# spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver